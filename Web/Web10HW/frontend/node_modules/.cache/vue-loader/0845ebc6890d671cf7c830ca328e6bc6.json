{"remainingRequest":"C:\\Users\\Сеня\\Desktop\\Web10HW\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Сеня\\Desktop\\Web10HW\\frontend\\src\\components\\middle\\PostView.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Сеня\\Desktop\\Web10HW\\frontend\\src\\components\\middle\\PostView.vue","mtime":1576826427432},{"path":"C:\\Users\\Сеня\\Desktop\\Web10HW\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Сеня\\Desktop\\Web10HW\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Сеня\\Desktop\\Web10HW\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Сеня\\Desktop\\Web10HW\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogIlBvc3RWaWV3IiwKICAgIHByb3BzOiBbJ3Bvc3QnXSwKICAgIGRhdGE6IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGNvbW1lbnRzOiBbXSwKICAgICAgICAgICAgZXJyb3I6ICIiLAogICAgICAgICAgICB0ZXh0OiAiIiwKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGxvYWRDb21tZW50czogZnVuY3Rpb24oKXsKICAgICAgICAgICAgYXhpb3MuZ2V0KCIvYXBpLzEvY29tbWVudHMiLCB7cGFyYW1zOiB7cG9zdElkOiB0aGlzLnBvc3QuaWR9fSkudGhlbihjb21tZW50cyA9PiB0aGlzLmNvbW1lbnRzID0gY29tbWVudHNbImRhdGEiXSk7CiAgICAgICAgICAgIHJldHVybiB0aGlzLmNvbW1lbnRzOwogICAgICAgIH0sCiAgICAgICAgb25BZGQ6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdGhpcy4kcm9vdC4kZW1pdCgib25BZGRDb21tZW50IiwgdGhpcy5wb3N0LCB0aGlzLnRleHQpOwogICAgICAgICAgICB0aGlzLnRleHQ9IiI7CiAgICAgICAgfQogICAgfSwgYmVmb3JlTW91bnQoKSB7CiAgICAgICAgdGhpcy50ZXh0ID0gdGhpcy5lcnJvciA9ICIiOwogICAgICAgIHRoaXMuJHJvb3QuJG9uKCJvbkFkZENvbW1lbnRWYWxpZGF0aW9uRXJyb3IiLCBlcnJvciA9PiB0aGlzLmVycm9yID0gZXJyb3IpOwogICAgfQp9Cg=="},{"version":3,"sources":["PostView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PostView.vue","sourceRoot":"src/components/middle","sourcesContent":["<template>\r\n    <div>\r\n        <article v-if=\"post !== undefined\" >\r\n            <div class=\"title\">{{post.title}}</div>\r\n            <div class=\"information\">By {{post.user.login}}</div>\r\n            <div class=\"body\">{{post.text}}</div>\r\n            <div v-for=\"comment in loadComments()\" :key=\"comment.id\">\r\n                <div class=\"information_comment\">By {{comment.user_com.login}}</div>\r\n                <div class=\"body_comment\" >{{comment.text}}</div>\r\n            </div>\r\n        </article>\r\n        <div class=\"form-box\">\r\n            <div class=\"header\">New comment</div>\r\n            <div class=\"body\">\r\n                <form method=\"post\" @submit.prevent=\"onAdd\">\r\n                    <div class=\"field\">\r\n                        <div class=\"name\">\r\n                            <label for=\"text\">Text</label>\r\n                        </div>\r\n                        <div class=\"value\">\r\n                            <textarea id=\"text\" rows=\"10\" name=\"text\" v-model=\"text\"></textarea>\r\n                        </div>\r\n                        <div class=\"error\">{{error}}</div>\r\n                    </div>\r\n                    <div class=\"button-field\">\r\n                        <input type=\"submit\" value=\"Add\">\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import axios from 'axios'\r\n    export default {\r\n        name: \"PostView\",\r\n        props: ['post'],\r\n        data: function() {\r\n            return {\r\n                comments: [],\r\n                error: \"\",\r\n                text: \"\",\r\n            }\r\n        },\r\n        methods: {\r\n            loadComments: function(){\r\n                axios.get(\"/api/1/comments\", {params: {postId: this.post.id}}).then(comments => this.comments = comments[\"data\"]);\r\n                return this.comments;\r\n            },\r\n            onAdd: function () {\r\n                this.$root.$emit(\"onAddComment\", this.post, this.text);\r\n                this.text=\"\";\r\n            }\r\n        }, beforeMount() {\r\n            this.text = this.error = \"\";\r\n            this.$root.$on(\"onAddCommentValidationError\", error => this.error = error);\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n</style>"]}]}